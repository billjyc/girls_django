# Generated by Django 4.1.7 on 2023-07-23 18:04

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BiliBiliStat',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('aid', models.IntegerField(verbose_name='视频BID')),
                ('view', models.IntegerField(verbose_name='观看量')),
                ('danmaku', models.IntegerField(verbose_name='弹幕数量')),
                ('reply', models.IntegerField(verbose_name='评论数量')),
                ('favorite', models.IntegerField(verbose_name='收藏数量')),
                ('coin', models.IntegerField(verbose_name='投币数量')),
                ('share', models.IntegerField(verbose_name='分享数量')),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'verbose_name': '公演B站数据',
                'verbose_name_plural': '公演B站数据',
                'db_table': 'bilibili_stat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MemberAbility',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sing', models.IntegerField(db_column='sing', verbose_name='唱歌')),
                ('dance', models.IntegerField(db_column='dance', verbose_name='舞蹈')),
                ('variety', models.IntegerField(db_column='variety', verbose_name='综艺感')),
                ('act', models.IntegerField(db_column='act', verbose_name='演技')),
                ('health', models.IntegerField(db_column='health', verbose_name='健康')),
                ('concentration', models.IntegerField(db_column='concentration', verbose_name='工作投入')),
                ('leadership', models.IntegerField(db_column='leadership', verbose_name='领导力')),
                ('pressure', models.IntegerField(db_column='pressure', verbose_name='抗压能力')),
            ],
            options={
                'verbose_name': '成员能力',
                'verbose_name_plural': '成员能力',
                'db_table': 'ability',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Memberinfo',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=20, null=True, verbose_name='姓名')),
                ('nick_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='昵称')),
                ('height', models.IntegerField(blank=True, null=True, verbose_name='身高')),
                ('blood_type', models.CharField(blank=True, max_length=10, null=True, verbose_name='血型')),
                ('batch', models.CharField(blank=True, max_length=100, null=True, verbose_name='期数')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('english_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='英文名')),
                ('join_time', models.DateField(blank=True, null=True, verbose_name='入团时间')),
                ('link', models.CharField(blank=True, max_length=300, null=True, verbose_name='资料链接')),
                ('image_link', models.CharField(blank=True, max_length=300, null=True, verbose_name='图片链接')),
                ('hobby', models.CharField(blank=True, max_length=100, null=True, verbose_name='爱好')),
                ('description', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('is_valid', models.IntegerField(verbose_name='是否在团')),
                ('constellation', models.CharField(max_length=50, verbose_name='星座')),
                ('birth_place', models.CharField(max_length=50, verbose_name='出生地')),
                ('agency', models.CharField(max_length=50, verbose_name='日期')),
                ('speciality', models.CharField(max_length=50, verbose_name='特长')),
                ('pid', models.IntegerField(blank=True, null=True, verbose_name='期数编号')),
                ('final_member_id', models.IntegerField(blank=True, null=True, verbose_name='目前最新的成员编号')),
            ],
            options={
                'verbose_name': '成员信息',
                'verbose_name_plural': '成员信息',
                'db_table': 'memberinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MemberPerformanceHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '成员公演记录',
                'verbose_name_plural': '成员公演记录',
                'db_table': 'member_performance_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MemberPerformanceHistoryTmp',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '成员公演记录-本年度',
                'verbose_name_plural': '成员公演记录-本年度',
                'db_table': 'member_performance_history_tmp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='公演名称')),
                ('debut_date', models.DateField(blank=True, null=True, verbose_name='首演日期')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='千秋乐日期')),
                ('link', models.CharField(blank=True, max_length=200, null=True, verbose_name='公演详情页链接')),
                ('logo_link', models.CharField(max_length=100, verbose_name='公演logo链接')),
                ('is_active', models.IntegerField(verbose_name='是否演出中')),
            ],
            options={
                'verbose_name': '公演信息',
                'verbose_name_plural': '公演信息',
                'db_table': 'performance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PerformanceHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='公演时间')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
                ('video_url', models.CharField(blank=True, max_length=500, null=True, verbose_name='视频链接')),
            ],
            options={
                'verbose_name': '公演日程',
                'verbose_name_plural': '公演日程',
                'db_table': 'performance_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='队伍编号')),
                ('group', models.CharField(blank=True, max_length=100, null=True, verbose_name='团体名称')),
                ('name', models.CharField(blank=True, max_length=30, null=True, verbose_name='队伍名称')),
                ('found_date', models.DateField(blank=True, null=True, verbose_name='建队时间')),
                ('is_valid', models.IntegerField(default=1)),
                ('icon', models.CharField(blank=True, max_length=500, null=True)),
                ('background_color', models.CharField(blank=True, max_length=100, null=True, verbose_name='应援色')),
            ],
            options={
                'verbose_name': '队伍信息',
                'verbose_name_plural': '队伍信息',
                'db_table': 'team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('detail', models.JSONField(verbose_name='变更详情')),
                ('update_time', models.DateTimeField(blank=True, default=models.DateTimeField(auto_now_add=True), null=True)),
            ],
            options={
                'verbose_name': '成员信息变更',
                'verbose_name_plural': '成员信息变更',
                'db_table': 'transfer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='歌曲名称')),
                ('num', models.IntegerField(verbose_name='歌曲人数')),
            ],
            options={
                'verbose_name': 'Unit曲',
                'verbose_name_plural': 'Unit曲',
                'db_table': 'unit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UnitHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField(verbose_name='站位序号')),
            ],
            options={
                'verbose_name': 'Unit曲表演记录',
                'verbose_name_plural': 'Unit曲表演记录',
                'db_table': 'unit_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Weibo',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('weibo_id', models.BigIntegerField(blank=True, null=True)),
                ('followers_count', models.BigIntegerField(blank=True, null=True)),
                ('friends_count', models.BigIntegerField(blank=True, null=True)),
                ('statuses_count', models.BigIntegerField(blank=True, null=True)),
                ('update_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '微博数据',
                'verbose_name_plural': '微博数据',
                'db_table': 'weibo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeiboDataHistory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField()),
                ('weibo_id', models.BigIntegerField(blank=True, null=True)),
                ('followers_count', models.BigIntegerField(blank=True, null=True)),
                ('friends_count', models.BigIntegerField(blank=True, null=True)),
                ('statuses_count', models.BigIntegerField(blank=True, null=True)),
                ('update_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '微博历史数据',
                'verbose_name_plural': '微博历史数据',
                'db_table': 'weibo_data_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PerformanceSong',
            fields=[
                ('id', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='歌曲名称')),
                ('performances', models.ManyToManyField(to='snh48.performance')),
            ],
            options={
                'verbose_name': '公演歌曲',
                'verbose_name_plural': '公演歌曲',
                'db_table': 'performance_song',
                'managed': True,
            },
        ),
    ]
